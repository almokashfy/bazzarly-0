name: 🔧 Deploy Backend to Cloud Run

on:
  push:
    branches: [ main ]
    paths: [ 'backend/**' ]
  workflow_dispatch: # Manual trigger

env:
  PROJECT_ID: store-thullah
  REGION: us-central1
  SERVICE_NAME: bazzarly-backend

jobs:
  deploy-backend:
    name: 🔧 Deploy Backend API
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4

    - name: 🔐 Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: ⚙️ Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.PROJECT_ID }}

    - name: 🐳 Configure Docker to use gcloud
      run: gcloud auth configure-docker

    - name: 🔧 Enable required APIs
      run: |
        gcloud services enable cloudbuild.googleapis.com
        gcloud services enable run.googleapis.com
        gcloud services enable containerregistry.googleapis.com

    - name: 🔨 Build Docker image
      run: |
        docker build -t gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          -f backend/Dockerfile backend/

    - name: 📤 Push image to Container Registry
      run: docker push gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA

    - name: 🚀 Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/$PROJECT_ID/$SERVICE_NAME:$GITHUB_SHA \
          --platform managed \
          --region $REGION \
          --allow-unauthenticated \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 10 \
          --port 8080 \
          --set-env-vars NODE_ENV=production,PORT=8080

    - name: 🌐 Get Service URL
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')
        echo "🎉 Backend deployed successfully!"
        echo "🔧 API URL: $SERVICE_URL"
        echo "🧪 Health Check: $SERVICE_URL/api/health"

    - name: 🧪 Test API Health
      run: |
        SERVICE_URL=$(gcloud run services describe $SERVICE_NAME --region=$REGION --format='value(status.url)')
        echo "Testing API health..."
        curl -f "$SERVICE_URL/api/health" || echo "Health check failed (API might be starting up)" 