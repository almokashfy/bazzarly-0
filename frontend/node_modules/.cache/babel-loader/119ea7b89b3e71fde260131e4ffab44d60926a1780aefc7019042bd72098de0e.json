{"ast":null,"code":"import React from'react';import config from'../config/config';// Validation rules\nexport const validators={required:function(value){let message=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'This field is required';if(value===null||value===undefined||value===''){return message;}return null;},email:function(value){let message=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Please enter a valid email address';const emailRegex=/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;if(value&&!emailRegex.test(value)){return message;}return null;},minLength:(min,message)=>value=>{if(value&&value.length<min){return message||`Must be at least ${min} characters long`;}return null;},maxLength:(max,message)=>value=>{if(value&&value.length>max){return message||`Must be no more than ${max} characters long`;}return null;},pattern:function(regex){let message=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Invalid format';return value=>{if(value&&!regex.test(value)){return message;}return null;};},numeric:function(value){let message=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Must be a number';if(value&&isNaN(Number(value))){return message;}return null;},price:function(value){let message=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Please enter a valid price';const num=Number(value);if(value&&(isNaN(num)||num<config.VALIDATION.MIN_PRICE||num>config.VALIDATION.MAX_PRICE)){return message;}return null;},url:function(value){let message=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Please enter a valid URL';try{if(value){new URL(value);}return null;}catch{return message;}},phone:function(value){let message=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Please enter a valid phone number';const phoneRegex=/^[+]?[1-9][\\d]{0,15}$/;if(value&&!phoneRegex.test(value.replace(/\\s/g,''))){return message;}return null;},zipCode:function(value){let message=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'Please enter a valid ZIP code';const zipRegex=/^\\d{5}(-\\d{4})?$/;if(value&&!zipRegex.test(value)){return message;}return null;},match:(matchField,message)=>(value,formData)=>{if(value&&formData[matchField]&&value!==formData[matchField]){return message||`Must match ${matchField}`;}return null;}};// Form validation schemas\nexport const validationSchemas={product:{title:[validators.required(),validators.minLength(config.VALIDATION.MIN_TITLE_LENGTH),validators.maxLength(config.VALIDATION.MAX_TITLE_LENGTH)],description:[validators.required(),validators.minLength(config.VALIDATION.MIN_DESCRIPTION_LENGTH),validators.maxLength(config.VALIDATION.MAX_DESCRIPTION_LENGTH)],price:[validators.required(),validators.price()],location:[validators.required()],condition:[validators.required()],categoryId:[validators.required()]},contact:{name:[validators.required(),validators.minLength(2),validators.maxLength(50)],email:[validators.required(),validators.email()],message:[validators.required(),validators.minLength(10),validators.maxLength(1000)]},search:{query:[validators.minLength(2,'Search term must be at least 2 characters'),validators.maxLength(100,'Search term is too long')]},user:{email:[validators.required(),validators.email()],password:[validators.required(),validators.minLength(8,'Password must be at least 8 characters'),validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,'Password must contain at least one uppercase letter, one lowercase letter, and one number')],confirmPassword:[validators.required(),validators.match('password','Passwords do not match')],firstName:[validators.required(),validators.minLength(2),validators.maxLength(30)],lastName:[validators.required(),validators.minLength(2),validators.maxLength(30)],phone:[validators.phone()]}};// Validate a single field\nexport const validateField=function(value,validationRules){let formData=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};if(!validationRules||!Array.isArray(validationRules)){return null;}for(const rule of validationRules){const error=rule(value,formData);if(error){return error;}}return null;};// Validate entire form\nexport const validateForm=(formData,schema)=>{const errors={};let hasErrors=false;Object.keys(schema).forEach(field=>{const error=validateField(formData[field],schema[field],formData);if(error){errors[field]=error;hasErrors=true;}});return{errors,isValid:!hasErrors};};// Real-time validation hook\nexport const useFormValidation=function(){let initialData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};let schema=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};const[data,setData]=React.useState(initialData);const[errors,setErrors]=React.useState({});const[touched,setTouched]=React.useState({});const validateField=React.useCallback((field,value)=>{const fieldRules=schema[field];if(!fieldRules)return null;return validateField(value,fieldRules,data);},[schema,data]);const handleChange=React.useCallback((field,value)=>{setData(prev=>({...prev,[field]:value}));// Validate if field has been touched\nif(touched[field]){const error=validateField(field,value);setErrors(prev=>({...prev,[field]:error}));}},[touched,validateField]);const handleBlur=React.useCallback(field=>{setTouched(prev=>({...prev,[field]:true}));const error=validateField(field,data[field]);setErrors(prev=>({...prev,[field]:error}));},[data,validateField]);const validateAll=React.useCallback(()=>{const{errors:allErrors,isValid}=validateForm(data,schema);setErrors(allErrors);setTouched(Object.keys(schema).reduce((acc,field)=>{acc[field]=true;return acc;},{}));return isValid;},[data,schema]);const reset=React.useCallback(function(){let newData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialData;setData(newData);setErrors({});setTouched({});},[initialData]);const isValid=React.useMemo(()=>{return Object.values(errors).every(error=>!error);},[errors]);return{data,errors,touched,isValid,handleChange,handleBlur,validateAll,reset,setData};};// Sanitization functions\nexport const sanitize={string:value=>{if(typeof value!=='string')return'';return value.trim().replace(/[<>]/g,'');},number:value=>{const num=Number(value);return isNaN(num)?0:num;},price:value=>{const num=Number(value);if(isNaN(num))return 0;return Math.max(0,Math.min(num,config.VALIDATION.MAX_PRICE));},email:value=>{if(typeof value!=='string')return'';return value.trim().toLowerCase();},url:value=>{if(typeof value!=='string')return'';const trimmed=value.trim();if(trimmed&&!trimmed.startsWith('http')){return`https://${trimmed}`;}return trimmed;},phone:value=>{if(typeof value!=='string')return'';return value.replace(/[^\\d+\\-\\s()]/g,'');}};// Form helpers\nexport const createFormHandler=(schema,onSubmit)=>{return formData=>{const{errors,isValid}=validateForm(formData,schema);if(isValid){// Sanitize data before submission\nconst sanitizedData=Object.keys(formData).reduce((acc,key)=>{const value=formData[key];// Apply appropriate sanitization based on field type\nif(key.includes('email')){acc[key]=sanitize.email(value);}else if(key.includes('price')||key.includes('amount')){acc[key]=sanitize.price(value);}else if(key.includes('url')||key.includes('website')){acc[key]=sanitize.url(value);}else if(key.includes('phone')){acc[key]=sanitize.phone(value);}else if(typeof value==='string'){acc[key]=sanitize.string(value);}else{acc[key]=value;}return acc;},{});return onSubmit(sanitizedData);}return Promise.reject({errors,message:'Validation failed'});};};const validationUtils={validators,validationSchemas,validateField,validateForm,sanitize,createFormHandler};export default validationUtils;","map":{"version":3,"names":["React","config","validators","required","value","message","arguments","length","undefined","email","emailRegex","test","minLength","min","maxLength","max","pattern","regex","numeric","isNaN","Number","price","num","VALIDATION","MIN_PRICE","MAX_PRICE","url","URL","phone","phoneRegex","replace","zipCode","zipRegex","match","matchField","formData","validationSchemas","product","title","MIN_TITLE_LENGTH","MAX_TITLE_LENGTH","description","MIN_DESCRIPTION_LENGTH","MAX_DESCRIPTION_LENGTH","location","condition","categoryId","contact","name","search","query","user","password","confirmPassword","firstName","lastName","validateField","validationRules","Array","isArray","rule","error","validateForm","schema","errors","hasErrors","Object","keys","forEach","field","isValid","useFormValidation","initialData","data","setData","useState","setErrors","touched","setTouched","useCallback","fieldRules","handleChange","prev","handleBlur","validateAll","allErrors","reduce","acc","reset","newData","useMemo","values","every","sanitize","string","trim","number","Math","toLowerCase","trimmed","startsWith","createFormHandler","onSubmit","sanitizedData","key","includes","Promise","reject","validationUtils"],"sources":["C:/Users/hossa/Documents/app/Store/bazzarly 0/frontend/src/utils/validation.js"],"sourcesContent":["import React from 'react';\r\nimport config from '../config/config';\r\n\r\n// Validation rules\r\nexport const validators = {\r\n  required: (value, message = 'This field is required') => {\r\n    if (value === null || value === undefined || value === '') {\r\n      return message;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  email: (value, message = 'Please enter a valid email address') => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (value && !emailRegex.test(value)) {\r\n      return message;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  minLength: (min, message) => (value) => {\r\n    if (value && value.length < min) {\r\n      return message || `Must be at least ${min} characters long`;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  maxLength: (max, message) => (value) => {\r\n    if (value && value.length > max) {\r\n      return message || `Must be no more than ${max} characters long`;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  pattern: (regex, message = 'Invalid format') => (value) => {\r\n    if (value && !regex.test(value)) {\r\n      return message;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  numeric: (value, message = 'Must be a number') => {\r\n    if (value && isNaN(Number(value))) {\r\n      return message;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  price: (value, message = 'Please enter a valid price') => {\r\n    const num = Number(value);\r\n    if (value && (isNaN(num) || num < config.VALIDATION.MIN_PRICE || num > config.VALIDATION.MAX_PRICE)) {\r\n      return message;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  url: (value, message = 'Please enter a valid URL') => {\r\n    try {\r\n      if (value) {\r\n        new URL(value);\r\n      }\r\n      return null;\r\n    } catch {\r\n      return message;\r\n    }\r\n  },\r\n\r\n  phone: (value, message = 'Please enter a valid phone number') => {\r\n    const phoneRegex = /^[+]?[1-9][\\d]{0,15}$/;\r\n    if (value && !phoneRegex.test(value.replace(/\\s/g, ''))) {\r\n      return message;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  zipCode: (value, message = 'Please enter a valid ZIP code') => {\r\n    const zipRegex = /^\\d{5}(-\\d{4})?$/;\r\n    if (value && !zipRegex.test(value)) {\r\n      return message;\r\n    }\r\n    return null;\r\n  },\r\n\r\n  match: (matchField, message) => (value, formData) => {\r\n    if (value && formData[matchField] && value !== formData[matchField]) {\r\n      return message || `Must match ${matchField}`;\r\n    }\r\n    return null;\r\n  },\r\n};\r\n\r\n// Form validation schemas\r\nexport const validationSchemas = {\r\n  product: {\r\n    title: [\r\n      validators.required(),\r\n      validators.minLength(config.VALIDATION.MIN_TITLE_LENGTH),\r\n      validators.maxLength(config.VALIDATION.MAX_TITLE_LENGTH),\r\n    ],\r\n    description: [\r\n      validators.required(),\r\n      validators.minLength(config.VALIDATION.MIN_DESCRIPTION_LENGTH),\r\n      validators.maxLength(config.VALIDATION.MAX_DESCRIPTION_LENGTH),\r\n    ],\r\n    price: [\r\n      validators.required(),\r\n      validators.price(),\r\n    ],\r\n    location: [\r\n      validators.required(),\r\n    ],\r\n    condition: [\r\n      validators.required(),\r\n    ],\r\n    categoryId: [\r\n      validators.required(),\r\n    ],\r\n  },\r\n\r\n  contact: {\r\n    name: [\r\n      validators.required(),\r\n      validators.minLength(2),\r\n      validators.maxLength(50),\r\n    ],\r\n    email: [\r\n      validators.required(),\r\n      validators.email(),\r\n    ],\r\n    message: [\r\n      validators.required(),\r\n      validators.minLength(10),\r\n      validators.maxLength(1000),\r\n    ],\r\n  },\r\n\r\n  search: {\r\n    query: [\r\n      validators.minLength(2, 'Search term must be at least 2 characters'),\r\n      validators.maxLength(100, 'Search term is too long'),\r\n    ],\r\n  },\r\n\r\n  user: {\r\n    email: [\r\n      validators.required(),\r\n      validators.email(),\r\n    ],\r\n    password: [\r\n      validators.required(),\r\n      validators.minLength(8, 'Password must be at least 8 characters'),\r\n      validators.pattern(\r\n        /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)/,\r\n        'Password must contain at least one uppercase letter, one lowercase letter, and one number'\r\n      ),\r\n    ],\r\n    confirmPassword: [\r\n      validators.required(),\r\n      validators.match('password', 'Passwords do not match'),\r\n    ],\r\n    firstName: [\r\n      validators.required(),\r\n      validators.minLength(2),\r\n      validators.maxLength(30),\r\n    ],\r\n    lastName: [\r\n      validators.required(),\r\n      validators.minLength(2),\r\n      validators.maxLength(30),\r\n    ],\r\n    phone: [\r\n      validators.phone(),\r\n    ],\r\n  },\r\n};\r\n\r\n// Validate a single field\r\nexport const validateField = (value, validationRules, formData = {}) => {\r\n  if (!validationRules || !Array.isArray(validationRules)) {\r\n    return null;\r\n  }\r\n\r\n  for (const rule of validationRules) {\r\n    const error = rule(value, formData);\r\n    if (error) {\r\n      return error;\r\n    }\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\n// Validate entire form\r\nexport const validateForm = (formData, schema) => {\r\n  const errors = {};\r\n  let hasErrors = false;\r\n\r\n  Object.keys(schema).forEach(field => {\r\n    const error = validateField(formData[field], schema[field], formData);\r\n    if (error) {\r\n      errors[field] = error;\r\n      hasErrors = true;\r\n    }\r\n  });\r\n\r\n  return { errors, isValid: !hasErrors };\r\n};\r\n\r\n// Real-time validation hook\r\nexport const useFormValidation = (initialData = {}, schema = {}) => {\r\n  const [data, setData] = React.useState(initialData);\r\n  const [errors, setErrors] = React.useState({});\r\n  const [touched, setTouched] = React.useState({});\r\n\r\n  const validateField = React.useCallback((field, value) => {\r\n    const fieldRules = schema[field];\r\n    if (!fieldRules) return null;\r\n\r\n    return validateField(value, fieldRules, data);\r\n  }, [schema, data]);\r\n\r\n  const handleChange = React.useCallback((field, value) => {\r\n    setData(prev => ({ ...prev, [field]: value }));\r\n\r\n    // Validate if field has been touched\r\n    if (touched[field]) {\r\n      const error = validateField(field, value);\r\n      setErrors(prev => ({\r\n        ...prev,\r\n        [field]: error,\r\n      }));\r\n    }\r\n  }, [touched, validateField]);\r\n\r\n  const handleBlur = React.useCallback((field) => {\r\n    setTouched(prev => ({ ...prev, [field]: true }));\r\n    \r\n    const error = validateField(field, data[field]);\r\n    setErrors(prev => ({\r\n      ...prev,\r\n      [field]: error,\r\n    }));\r\n  }, [data, validateField]);\r\n\r\n  const validateAll = React.useCallback(() => {\r\n    const { errors: allErrors, isValid } = validateForm(data, schema);\r\n    setErrors(allErrors);\r\n    setTouched(\r\n      Object.keys(schema).reduce((acc, field) => {\r\n        acc[field] = true;\r\n        return acc;\r\n      }, {})\r\n    );\r\n    return isValid;\r\n  }, [data, schema]);\r\n\r\n  const reset = React.useCallback((newData = initialData) => {\r\n    setData(newData);\r\n    setErrors({});\r\n    setTouched({});\r\n  }, [initialData]);\r\n\r\n  const isValid = React.useMemo(() => {\r\n    return Object.values(errors).every(error => !error);\r\n  }, [errors]);\r\n\r\n  return {\r\n    data,\r\n    errors,\r\n    touched,\r\n    isValid,\r\n    handleChange,\r\n    handleBlur,\r\n    validateAll,\r\n    reset,\r\n    setData,\r\n  };\r\n};\r\n\r\n// Sanitization functions\r\nexport const sanitize = {\r\n  string: (value) => {\r\n    if (typeof value !== 'string') return '';\r\n    return value.trim().replace(/[<>]/g, '');\r\n  },\r\n\r\n  number: (value) => {\r\n    const num = Number(value);\r\n    return isNaN(num) ? 0 : num;\r\n  },\r\n\r\n  price: (value) => {\r\n    const num = Number(value);\r\n    if (isNaN(num)) return 0;\r\n    return Math.max(0, Math.min(num, config.VALIDATION.MAX_PRICE));\r\n  },\r\n\r\n  email: (value) => {\r\n    if (typeof value !== 'string') return '';\r\n    return value.trim().toLowerCase();\r\n  },\r\n\r\n  url: (value) => {\r\n    if (typeof value !== 'string') return '';\r\n    const trimmed = value.trim();\r\n    if (trimmed && !trimmed.startsWith('http')) {\r\n      return `https://${trimmed}`;\r\n    }\r\n    return trimmed;\r\n  },\r\n\r\n  phone: (value) => {\r\n    if (typeof value !== 'string') return '';\r\n    return value.replace(/[^\\d+\\-\\s()]/g, '');\r\n  },\r\n};\r\n\r\n// Form helpers\r\nexport const createFormHandler = (schema, onSubmit) => {\r\n  return (formData) => {\r\n    const { errors, isValid } = validateForm(formData, schema);\r\n    \r\n    if (isValid) {\r\n      // Sanitize data before submission\r\n      const sanitizedData = Object.keys(formData).reduce((acc, key) => {\r\n        const value = formData[key];\r\n        \r\n        // Apply appropriate sanitization based on field type\r\n        if (key.includes('email')) {\r\n          acc[key] = sanitize.email(value);\r\n        } else if (key.includes('price') || key.includes('amount')) {\r\n          acc[key] = sanitize.price(value);\r\n        } else if (key.includes('url') || key.includes('website')) {\r\n          acc[key] = sanitize.url(value);\r\n        } else if (key.includes('phone')) {\r\n          acc[key] = sanitize.phone(value);\r\n        } else if (typeof value === 'string') {\r\n          acc[key] = sanitize.string(value);\r\n        } else {\r\n          acc[key] = value;\r\n        }\r\n        \r\n        return acc;\r\n      }, {});\r\n      \r\n      return onSubmit(sanitizedData);\r\n    }\r\n    \r\n    return Promise.reject({ errors, message: 'Validation failed' });\r\n  };\r\n};\r\n\r\nconst validationUtils = {\r\n  validators,\r\n  validationSchemas,\r\n  validateField,\r\n  validateForm,\r\n  sanitize,\r\n  createFormHandler,\r\n};\r\n\r\nexport default validationUtils; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}